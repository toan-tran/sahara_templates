#!/bin/bash

# Close STDERR
#exec 2<&-

TENANT_ID=$(keystone token-get 2>/dev/null |  awk '/ tenant_id / {print $4;}')
OS_TENANT_ID=${OS_TENANT_ID:-$TENANT_ID}
echo OS_TENANT_ID=$OS_TENANT_ID

IMG_ID=$(nova image-list | grep "Spark"  | grep "1.0" | awk 'NR==1 {print $2}')
IMAGE_ID=${IMAGE_ID:-$IMG_ID}
echo IMAGE_ID=$IMAGE_ID

PUB1_NET=$(nova net-list | awk '/ public / {print $2; exit}')
PUB2_NET=$(nova net-list | awk '/ internet / {print $2; exit}')
PUBLIC_NET=${PUBLIC_NET:-${PUB1_NET:-$PUB2_NET}}
echo PUBLIC_NET=$PUBLIC_NET

PRI_NET=$(nova net-list | awk '!/(+|ID|public|internet)/ {print $2; exit}')
PRIVATE_NET=${PRIVATE_NET:-$PRI_NET}
echo PRIVATE_NET=$PRIVATE_NET

KEY_ID=$(nova keypair-list | awk '!/+|Name/ {print $2; exit}')
KEYPAIR_ID=${KEYPAIR:-$KEY_ID}
echo KEYPAIR_ID=$KEYPAIR_ID

FLAVOR_ID=${FLAVOR_ID:-23}
echo FLAVOR_ID=$FLAVOR_ID

if [ $SAHARA_URL ]; then
  sa="sahara --insecure --bypass-url $SAHARA_URL/v1.1/$OS_TENANT_ID"
else
  sa="sahara --insecure"
fi

echo sa=$sa

sed "s/_flavorid/$FLAVOR_ID/" s1/s1master > s1/s1master_temp
sed -i "s/_public_net/$PUBLIC_NET/" s1/s1master_temp
masterid=`$sa node-group-template-create --json s1/s1master_temp | awk '/ id / {print \$4}'`
if [ -z $masterid ]; then
  masterid=`$sa node-group-template-list | awk '/s1master/ {print $4; exit;}'`
fi
echo s1master ID: $masterid

sed "s/_flavorid/$FLAVOR_ID/" s1/s1worker > s1/s1worker_temp
sed -i "s/_public_net/$PUBLIC_NET/" s1/s1worker_temp
workerid=`$sa node-group-template-create --json s1/s1worker_temp | awk '/ id / {print $4}'`
if [ -z $workerid ]; then
  workerid=`$sa node-group-template-list | awk '/s1worker/ {print $4; exit;}'`
fi
echo s1worker ID: $workerid

sed "s/_masterid/$masterid/" s1/s1cluster > s1/s1cluster_temp
sed -i "s/_workerid/$workerid/" s1/s1cluster_temp
clusterid=`$sa cluster-template-create --json s1/s1cluster_temp | awk '/ id / {print $4}'`
clusterid=`$sa cluster-template-create --json s1/s1cluster_temp | awk '/ id / {print $4}'`
if [ -z $clusterid ]; then
  clusterid=`$sa cluster-template-list | awk '/s1 / {print $4; exit;}'`
fi
echo cluster ID: $clusterid

# Redirect STDERR to STDOUT
exec 2>&1

sed "s/_clusterid/$clusterid/" s1/s1launch > s1/s1launch_temp
sed -i "s/_imageid/$IMAGE_ID/" s1/s1launch_temp
sed -i "s/_private_net/$PRIVATE_NET/" s1/s1launch_temp
sed -i "s/_keypairid/$KEYPAIR_ID/" s1/s1launch_temp

$sa cluster-create --json s1/s1launch_temp
 
